---
# Ansible playbook for deploying the movie-analyst application

- name: Deploy Backend Application
  hosts: backend
  become: yes
  vars:
    app_user: "app"
    app_group: "app"
    app_dir: "/opt/movie-analyst"
    backend_port: 3000
    db_host: "{{ db_host | default('127.0.0.1') }}"  # Using localhost for Cloud SQL Proxy
    db_name: "{{ db_name | default('movie_db') }}"
    db_user: "{{ db_user | default('app_user') }}"
    db_password: "{{ db_password | default('your_secure_password_here') }}"
    db_connection_name_default: "epamgcpdeployment2:us-central1:movie-db-qa"
    db_connection_name: "{{ db_connection_name | default(db_connection_name_default) }}"
  pre_tasks:
    - name: Ensure ACL support is present
      apt:
        name: acl
        state: present
        update_cache: yes
  roles:
    - role: backend
  post_tasks:
    - name: Save PM2 processes
      command: pm2 save
      become_user: "{{ app_user }}"

    - name: Ensure PM2 starts on boot
      command: pm2 startup
      become: yes
      args:
        creates: /etc/systemd/system/pm2-{{ app_user }}.service

- name: Deploy Frontend Application
  hosts: frontend
  become: yes
  vars:
    app_user: "app"
    app_group: "app"
    app_dir: "/opt/movie-analyst"
    frontend_port: 3030
    backend_url: "{{ backend_url | default('http://10.0.2.2:3000') }}"
  pre_tasks:
    - name: Ensure ACL support is present
      apt:
        name: acl
        state: present
        update_cache: yes
  roles:
    - role: frontend
  post_tasks:
    - name: Start frontend service with PM2
      command: pm2 start server.js -n movie-analyst-frontend --cwd {{ app_dir }}/movie-analyst-ui/movie-analyst-ui
      become_user: "{{ app_user }}"
      args:
        creates: ~/.pm2/apps.json

    - name: Save PM2 processes
      command: pm2 save
      become_user: "{{ app_user }}"

    - name: Ensure PM2 starts on boot
      command: pm2 startup
      become: yes
      args:
        creates: /etc/systemd/system/pm2-{{ app_user }}.service