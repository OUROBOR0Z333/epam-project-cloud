---
# Ansible playbook for database schema initialization
# This should be run after application deployment but before starting the backend service

- name: Initialize Database Schema and Data
  hosts: backend
  become: yes
  vars:
    app_user: "app"
    app_dir: "/opt/movie-analyst"
    db_host: "{{ db_host | default('127.0.0.1') }}"  # Using localhost for Cloud SQL Proxy
    db_name: "{{ db_name | default('movie_db') }}"
    db_user: "{{ db_user | default('app_user') }}"
    db_password: "{{ db_password | default('your_secure_password_here') }}"
  tasks:
    - name: Wait briefly for Cloud SQL Proxy to be ready
      pause:
        seconds: 30
      # Allow time for the Cloud SQL Proxy to establish connection

    - name: Create database schema
      mysql_db:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        name: "{{ db_name }}"
        state: present
      register: db_creation_result

    - name: Create publications table
      mysql_query:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        login_db: "{{ db_name }}"
        query: |
          CREATE TABLE IF NOT EXISTS publications (
            id INT AUTO_INCREMENT PRIMARY KEY,
            name VARCHAR(255) NOT NULL,
            avatar VARCHAR(255)
          )
      register: publications_table_result

    - name: Create reviewers table
      mysql_query:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        login_db: "{{ db_name }}"
        query: |
          CREATE TABLE IF NOT EXISTS reviewers (
            id INT AUTO_INCREMENT PRIMARY KEY,
            name VARCHAR(255) NOT NULL,
            publication VARCHAR(255) NOT NULL,
            avatar VARCHAR(255)
          )
      register: reviewers_table_result

    - name: Create movies table
      mysql_query:
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"
        login_db: "{{ db_name }}"
        query: |
          CREATE TABLE IF NOT EXISTS movies (
            id INT AUTO_INCREMENT PRIMARY KEY,
            title VARCHAR(255) NOT NULL,
            release_year VARCHAR(4) NOT NULL,
            score INT NOT NULL,
            reviewer VARCHAR(255) NOT NULL,
            publication VARCHAR(255) NOT NULL
          )
      register: movies_table_result

    - name: Run database schema initialization (seeds)
      command: node seeds.js
      args:
        chdir: "{{ app_dir }}/movie-analyst-api/movie-analyst-api"
      environment:
        DB_HOST: "{{ db_host }}"
        DB_USER: "{{ db_user }}"
        DB_PASS: "{{ db_password }}"
        DB_NAME: "{{ db_name }}"
      become_user: "{{ app_user }}"
      register: schema_result

    - name: Display schema initialization result
      debug:
        msg: "Schema initialization completed: {{ schema_result.stdout_lines | default('No output') }}"

    - name: Check for errors in schema initialization
      fail:
        msg: "Database schema initialization failed"
      when: schema_result.rc != 0