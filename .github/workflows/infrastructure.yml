name: Infrastructure CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.5
        terraform_wrapper: false

    - name: Setup Ansible
      uses: ansible/actions/setup@v1
      with:
        ansible-version: '6.7.0'

    - name: Terraform Format
      run: |
        cd gcp-deployment
        terraform fmt -check

    - name: Terraform Init
      run: |
        cd gcp-deployment
        terraform init

    - name: Terraform Validate
      run: |
        cd gcp-deployment
        terraform validate

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run tfsec
      uses: aquasecurity/tfsec-action@v1.0.3
      with:
        soft_fail: false

  deploy:
    needs: [validate, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
    - uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.5
        terraform_wrapper: false

    - name: Setup Ansible
      uses: ansible/actions/setup@v1
      with:
        ansible-version: '6.7.0'

    - name: Setup GCP Authentication
      run: |
        # Create a temporary key file from the base64-encoded secret
        mkdir -p ~/.config/gcloud
        echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > ~/gcp-key.json
        
        # Set environment variable for Terraform to use the service account key
        echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json" >> $GITHUB_ENV
        
        # Also authenticate gcloud CLI
        gcloud auth activate-service-account --key-file=~/gcp-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set compute/region ${{ secrets.GCP_REGION }}

    - name: Terraform Init
      run: |
        cd gcp-deployment
        terraform init

    - name: Terraform Plan
      run: |
        cd gcp-deployment
        terraform plan \
          -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
          -var="credentials_path=$HOME/gcp-key.json"

    - name: Terraform Apply
      if: github.event_name != 'pull_request'
      run: |
        cd gcp-deployment
        terraform apply -auto-approve \
          -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
          -var="credentials_path=$HOME/gcp-key.json"