name: Configure Terraform Backend

on:
  workflow_dispatch:  # Allows manual triggering
    inputs:
      bucket_name:
        description: 'GCS bucket name for Terraform state'
        required: true
        default: 'epam-bucket-gcp2025'
      prefix:
        description: 'State file prefix'
        required: true
        default: 'terraform/state'

jobs:
  configure-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.5
        terraform_wrapper: false

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Create temporary key file and configure gcloud
      run: |
        mkdir -p $HOME/.config/gcloud
        echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > $HOME/gcp-key.json
        export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json
        gcloud auth activate-service-account --key-file=$HOME/gcp-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set compute/region us-central1

    - name: Check if bucket exists
      run: |
        echo "Checking if GCS bucket exists: ${{ github.event.inputs.bucket_name }}"
        if gsutil ls -b gs://${{ github.event.inputs.bucket_name }}/ >/dev/null 2>&1; then
          echo "Bucket exists, proceeding with configuration"
          exit 0
        else
          echo "ERROR: Bucket ${{ github.event.inputs.bucket_name }} does not exist!"
          echo "Please create the bucket first using the 'Create GCS Bucket' workflow"
          exit 1
        fi

    - name: Update backend configuration
      run: |
        echo "Updating Terraform backend configuration..."
        cat > ./terraform/backend.hcl << EOF
        bucket = "${{ github.event.inputs.bucket_name }}"
        prefix = "${{ github.event.inputs.prefix }}"
        EOF
        
        echo "Updated backend configuration file:"
        cat ./terraform/backend.hcl

    - name: Configure Terraform backend in the code
      run: |
        # Create a proper backend configuration file
        cat > ./terraform/backend.tf << EOF
        # Backend configuration for Terraform state management
        terraform {
          backend "gcs" {
            bucket = "${{ github.event.inputs.bucket_name }}"
            prefix = "${{ github.event.inputs.prefix }}"
          }
        }
        EOF

    - name: Initialize Terraform with Backend
      run: |
        echo "Initializing Terraform with GCS backend..."
        cd ./terraform
        terraform init -backend-config=backend.hcl
        echo "✅ Terraform initialized with GCS backend successfully!"

    - name: Verify Terraform configuration
      run: |
        echo "Validating Terraform configuration..."
        cd ./terraform
        terraform validate
        echo "✅ Terraform configuration is valid!"

    - name: Show Terraform status
      run: |
        echo "Current Terraform workspace status:"
        cd ./terraform
        terraform workspace show
        echo "✅ Backend configuration completed!"
        echo ""
        echo "Your Terraform environment is now configured to use GCS bucket:"
        echo "  Bucket: ${{ github.event.inputs.bucket_name }}"
        echo "  Prefix: ${{ github.event.inputs.prefix }}"
        echo ""
        echo "You can now run 'terraform plan' and 'terraform apply' to manage infrastructure."