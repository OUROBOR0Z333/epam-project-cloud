name: Delete GCS Bucket

on:
  workflow_dispatch:  # Allows manual triggering
    inputs:
      bucket_name:
        description: 'Bucket name to delete'
        required: true
        default: 'epam-bucket-gcp2025'
      confirm_deletion:
        description: 'Type "DELETE" to confirm (case-sensitive)'
        required: true

jobs:
  delete-bucket:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.confirm_deletion == 'DELETE' }}

    steps:
    - name: Echo Workflow Start
      run: |
        echo "Starting GCS bucket deletion workflow..."
        echo "Bucket name: ${{ github.event.inputs.bucket_name }}"
        echo "Warning: This will permanently delete the bucket and all its contents!"

    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Create temporary key file and configure gcloud
      run: |
        mkdir -p $HOME/.config/gcloud
        echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > $HOME/gcp-key.json
        export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp-key.json
        gcloud auth activate-service-account --key-file=$HOME/gcp-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud config set compute/region us-central1

    - name: Check if bucket exists
      run: |
        if gsutil ls -b gs://${{ github.event.inputs.bucket_name }}/ >/dev/null 2>&1; then
          echo "BUCKET_EXISTS=true" >> $GITHUB_ENV
          echo "Bucket ${{ github.event.inputs.bucket_name }} exists and will be deleted"
        else
          echo "BUCKET_EXISTS=false" >> $GITHUB_ENV
          echo "Bucket ${{ github.event.inputs.bucket_name }} does not exist"
        fi

    - name: Delete GCS Bucket (only if it exists)
      if: env.BUCKET_EXISTS == 'true'
      run: |
        echo "Deleting GCS bucket: ${{ github.event.inputs.bucket_name }}"
        # First, try to remove all objects from the bucket (not the bucket itself)
        gsutil -m rm -r gs://${{ github.event.inputs.bucket_name }}/** || echo "No objects to delete or bucket is already empty"
        # Then delete the empty bucket
        gsutil rb gs://${{ github.event.inputs.bucket_name }}/ || echo "Bucket may have been already deleted"
        
    - name: Final Status
      run: |
        if [ "${{ env.BUCKET_EXISTS }}" = "true" ]; then
          echo "✅ GCS Bucket ${{ github.event.inputs.bucket_name }} deleted successfully!"
        else
          echo "ℹ️  Bucket ${{ github.event.inputs.bucket_name }} did not exist, nothing to delete."
        fi
        echo "Deletion completed!"