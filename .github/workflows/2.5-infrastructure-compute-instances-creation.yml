name: 2.5-infrastructure-compute-instances-creation.yml

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment (qa/prod)'
        required: true
        default: 'qa'
      instance_type:
        description: 'Type of instance to create (bastion/frontend/backend/all)'
        required: false
        default: 'all'

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GCP_ZONE: ${{ secrets.GCP_ZONE }}

jobs:
  compute-instances-creation:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment == 'prod' && 'production' || 'development' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan for Compute Instances
        run: |
          if [ "${{ inputs.instance_type }}" = "all" ]; then
            terraform plan \
              -target=module.bastion \
              -target=module.app_instances \
              -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
              -var="region=${{ secrets.GCP_REGION }}" \
              -var="zone=${{ secrets.GCP_ZONE }}" \
              -var="ssh_allowed_ips=${{ secrets.SSH_ALLOWED_IPS }}" \
              -var="private_subnet=$(terraform output -state=tfplan.tfstate -raw private_subnet_id)" \
              -var="public_subnet=$(terraform output -state=tfplan.tfstate -raw public_subnet_id)" \
              -out=tfplan
          elif [ "${{ inputs.instance_type }}" = "bastion" ]; then
            terraform plan \
              -target=module.bastion \
              -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
              -var="region=${{ secrets.GCP_REGION }}" \
              -var="zone=${{ secrets.GCP_ZONE }}" \
              -var="ssh_allowed_ips=${{ secrets.SSH_ALLOWED_IPS }}" \
              -var="public_subnet=$(terraform output -state=tfplan.tfstate -raw public_subnet_id)" \
              -out=tfplan
          else
            terraform plan \
              -target=module.app_instances \
              -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
              -var="region=${{ secrets.GCP_REGION }}" \
              -var="zone=${{ secrets.GCP_ZONE }}" \
              -var="private_subnet=$(terraform output -state=tfplan.tfstate -raw private_subnet_id)" \
              -var="frontend_machine_type=e2-micro" \
              -var="backend_machine_type=e2-micro" \
              -out=tfplan
          fi
        working-directory: ./terraform

      - name: Terraform Apply Compute Instances
        run: terraform apply tfplan
        working-directory: ./terraform